package ex11;

class A{}
class B extends A{}
class C extends B{}

class Box<T> { 
	private T obj;

	public T getObj() { return obj;	}
	public void setObj(T obj) { this.obj = obj;	}
	@Override
	public String toString() {
		return obj.toString();
	}
}

class BoxFactory{
	// 상한 제한 와일드카드: Box<B>, Box<C>만 전달 가능
	// box 대입할 수 있는 대상은 B거나 B하위클래스만 대입가능
	//상자 안에 정확히 어떤 타입이 들어있는지 모르니까 값을 넣는 건 금지 (set 불가)
	// 다만 최소 B 타입은 들어있다고 보장되니까 꺼내는 건 가능 (get 가능)
	public static void peekBox(Box<? extends B> box) {		
		System.out.println(box);
		box.getObj();  // 읽기만 가능
//		box.setObj(new C());
	}
}

public class 상한제한와일드카드02 {

	public static void main(String[] args) {

		Box<A> a = new Box();
		a.setObj(new A());
		
		Box<B> b = new Box();
		b.setObj(new B());
		
		Box<C> c = new Box();
		c.setObj(new C());
		
		
//		BoxFactory.peekBox(a);  //A는 B보다 상위 타입이므로 전달 불가
		BoxFactory.peekBox(b);
		BoxFactory.peekBox(c);
		
	}

}










