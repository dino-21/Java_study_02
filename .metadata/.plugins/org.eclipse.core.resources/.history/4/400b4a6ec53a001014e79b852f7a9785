package ex05;

class A{}
class B extends A{}
class C extends B{}

class Box<T extends A>{  //T 전달될 수있는 대상은 A거나 A 하위(자손) 클래스만 가능
	private T obj;

	public T getObj() {
		return obj;
	}

	public void setObj(T obj) { //public void setObj(A obj)
		this.obj = obj;
	}
}

public class 타입제한하기 {

	public static void main(String[] args) {		
		// Box<A>는 A 또는 A의 하위 객체를 받을 수 있지만, 반환 타입은 항상 A
		// setObj에는 A 또는 A의 하위 객체(B, C 등)를 넣을 수 있지만
		// getObj의 반환 타입은 항상 A이다 (그래서 다운캐스팅이 필요할 수 있다).
		Box<A> aBox = new Box();
		
		//Box<B>는 B 또는 B의 하위 객체를 받을 수 있지만, 반환 타입은 항상 B 
		Box<B> bBox = new Box();
		
		//Box<C>는 C 또는 C의 하위 객체를 받을 수 있지만, 반환 타입은 항상 C
		Box<C> cBox = new Box();
		
		aBox.setObj(new A());
		A a = aBox.getObj();
		
		aBox.setObj(new B());
		B b = (B)aBox.getObj();
		
		aBox.setObj(new C());
		C c = (C)aBox.getObj();
		
//		Box<String> sBox = new Box();
//		Box<Integer> iBox = new Box();
	}

}
